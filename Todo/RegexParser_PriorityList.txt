RegexParser - priority list:

* backtracking matcher:
    * quantifiers
    * lazy quantifiers
    * separation of tests (ExplicitDFA / Backtracking); turn on/off ALL tests at once, for a particular algorithm

[-explicit DFA matcher:
    - build NFA state machine (from pattern AST)
    - transform state machine from NFA to DFA
    - quantifiers
    - alternations
   [- lazy quantifiers]]

[-implicit DFA matcher]

[-possessive quantifiers: ?+, *+, ++, {m,n}+ ]

= anchors: ^, $, \b, \B
= Regex options:
    * Singleline
    - Multiline
    - IgnoreCase
    - IgnorePatternWhitespace
    - ExplicitCapture
   [- RightToLeft]
- miscellaneous constructs: (?#comment), (?i)

- error handling while parsing the pattern

= captures and capturing groups
- nonbacktracking subexpressions (atomic grouping): (?> ...)
- named groups
- backreferences

- look-ahead and look-behind (positive and negative)

= Replace()
- substitution patterns (starting with '$')

- Replace(String, MatchEvaluator), where MatchEvaluator is a delegate
- Split()

- Unicode:
    - Unicode categories and named blocks (char classes)
	- RegexOption: canonical (Unicode) or ECMAScript/JavaScript (ASCII) behavior



Short version:

- options (global & inline)
- anchors
- captures
- Replace()
- group-related (named groups, atomic groups, backreferences)
- look-ahead and look-behind
